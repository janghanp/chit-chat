// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  username           String   @unique
  password           String
  avatar             String?
  public_id          String?
  leftPrivateChatIds String[]
  hasNewNotification Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  chats             Chat[]
  chatsOwnedByMe    Chat[]         @relation("OwnedChats")
  messages          Message[]
  friends           User[]         @relation("Friendship")
  friendOf          User[]         @relation("Friendship")
  notifications     Notification[] @relation("ReceivedNotification")
  sentNotifications Notification[] @relation("SentNotification")
}

model Message {
  id          String   @id @default(cuid())
  text        String?
  senderId    String
  chatId      String
  attachments Json[]
  createdAt   DateTime @default(now())

  sender User @relation(fields: [senderId], references: [id])
  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Chat {
  id        String   @id @unique @default(cuid())
  name      String?
  icon      String?
  public_id String?
  ownerId   String?
  type      Type     @default(GROUP)
  readBy    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    User[]
  owner    User?     @relation("OwnedChats", fields: [ownerId], references: [id])
  messages Message[]
}

model Notification {
  id         String   @id @unique @default(cuid())
  message    String
  link       String?
  read       Boolean  @default(false)
  receiverId String
  senderId   String
  createdAt  DateTime @default(now())

  receiver User @relation("ReceivedNotification", fields: [receiverId], references: [id])
  sender   User @relation("SentNotification", fields: [senderId], references: [id])
}

enum Type {
  GROUP
  PRIVATE
}
